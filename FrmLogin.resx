<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>